{
	"name": "pipeline2",
	"properties": {
		"activities": [
			{
				"name": "Get Dataset Info",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat(' select * from [dbo].[dataset_info] where dataset_id  = \n', string(pipeline().parameters.datasetID))",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Get Metadata",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Get Dataset Info",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "csv_source",
						"type": "DatasetReference",
						"parameters": {
							"domain": {
								"value": "@activity('Get Dataset Info').output.firstRow.domain",
								"type": "Expression"
							},
							"dataset_path": {
								"value": "@activity('Get Dataset Info').output.firstRow.location",
								"type": "Expression"
							},
							"file_name": "/"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"modifiedDatetimeStart": {
							"value": "@pipeline().parameters.startTime",
							"type": "Expression"
						},
						"modifiedDatetimeEnd": {
							"value": "@pipeline().parameters.endTime",
							"type": "Expression"
						},
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Set total_rules",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "ForEachRule",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "total_rules",
					"value": {
						"value": "@string(length(variables('rule_list')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEachFiles",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set total_rules",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Switch File Type",
							"type": "Switch",
							"dependsOn": [
								{
									"activity": "Set file_name variable",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@activity('Get Dataset Info').output.firstRow.file_type",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "csv",
										"activities": [
											{
												"name": "Data flow csv",
												"type": "ExecuteDataFlow",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "dataflow_csv",
														"type": "DataFlowReference",
														"parameters": {
															"rule_list": {
																"value": "@variables('rule_list')",
																"type": "Expression"
															},
															"total_rules": {
																"value": "@variables('total_rules')",
																"type": "Expression"
															},
															"rule_names": {
																"value": "@variables('rule_names')",
																"type": "Expression"
															},
															"col_names": {
																"value": "@variables('col_names')",
																"type": "Expression"
															},
															"file_name": {
																"value": "'@{variables('file_name')}'",
																"type": "Expression"
															}
														},
														"datasetParameters": {
															"source": {
																"domain": "@activity('Get Dataset Info').output.firstRow.domain",
																"dataset_path": "@activity('Get Dataset Info').output.firstRow.location",
																"file_name": {
																	"value": "@variables('file_name')",
																	"type": "Expression"
																}
															},
															"FailedRecords": {
																"domain": "@activity('Get Dataset Info').output.firstRow.domain",
																"dataset_path": "@activity('Get Dataset Info').output.firstRow.location",
																"file_name": "@variables('file_name')"
															}
														}
													},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													},
													"traceLevel": "Fine"
												}
											}
										]
									},
									{
										"value": "parquet",
										"activities": [
											{
												"name": "Data flow parquet",
												"type": "ExecuteDataFlow",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "dataflow_parquet",
														"type": "DataFlowReference",
														"parameters": {
															"rule_list": {
																"value": "@variables('rule_list')",
																"type": "Expression"
															},
															"total_rules": {
																"value": "@variables('total_rules')",
																"type": "Expression"
															},
															"rule_names": {
																"value": "@variables('rule_names')",
																"type": "Expression"
															},
															"col_names": {
																"value": "@variables('col_names')",
																"type": "Expression"
															},
															"file_name": {
																"value": "'@{variables('file_name')}'",
																"type": "Expression"
															}
														},
														"datasetParameters": {
															"source": {
																"domain": "@activity('Get Dataset Info').output.firstRow.domain",
																"dataset_path": "@activity('Get Dataset Info').output.firstRow.location",
																"file_name": {
																	"value": "@variables('file_name')",
																	"type": "Expression"
																}
															},
															"FailedRecords": {
																"domain": "@activity('Get Dataset Info').output.firstRow.domain",
																"dataset_path": "@activity('Get Dataset Info').output.firstRow.location",
																"file_name": "@variables('file_name')"
															}
														}
													},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													},
													"traceLevel": "Fine"
												}
											}
										]
									},
									{
										"value": "json",
										"activities": [
											{
												"name": "Data flow json",
												"type": "ExecuteDataFlow",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "dataflow_json",
														"type": "DataFlowReference",
														"parameters": {
															"rule_list": {
																"value": "@variables('rule_list')",
																"type": "Expression"
															},
															"total_rules": {
																"value": "@variables('total_rules')",
																"type": "Expression"
															},
															"rule_names": {
																"value": "@variables('rule_names')",
																"type": "Expression"
															},
															"col_names": {
																"value": "@variables('col_names')",
																"type": "Expression"
															},
															"file_name": {
																"value": "'@{variables('file_name')}'",
																"type": "Expression"
															}
														},
														"datasetParameters": {
															"source": {
																"domain": "@activity('Get Dataset Info').output.firstRow.domain",
																"dataset_path": "@activity('Get Dataset Info').output.firstRow.location",
																"file_name": {
																	"value": "@variables('file_name')",
																	"type": "Expression"
																}
															},
															"FailedRecords": {
																"domain": "@activity('Get Dataset Info').output.firstRow.domain",
																"dataset_path": "@activity('Get Dataset Info').output.firstRow.location",
																"file_name": "@variables('file_name')"
															}
														}
													},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													},
													"traceLevel": "Fine"
												}
											}
										]
									}
								],
								"defaultActivities": [
									{
										"name": "Fail1",
										"type": "Fail",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"message": "Please enter a valid file format",
											"errorCode": "001"
										}
									}
								]
							}
						},
						{
							"name": "Set file_name variable",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "file_name",
								"value": {
									"value": "@item().name",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "ForEachRule",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get User Input",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Dataset Info",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get user input').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Get rule template",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('select *\nfrom dbo.data_quality_rules_new\nwhere rule_id =',string(item().rule_id))",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSqlTable1",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Compose rules",
							"type": "Switch",
							"dependsOn": [
								{
									"activity": "Get rule template",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@string(activity('Get rule template').output.firstRow.num_params)",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "1",
										"activities": [
											{
												"name": "Rules with 1 param",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "rule_expr",
													"value": {
														"value": "@concat(split(string(activity('Get rule template').output.firstRow.rule_expression), '{}')[0], item().column_name, split(string(activity('Get rule template').output.firstRow.rule_expression), '{}')[1], split(string(item().extra_params), ',')[0], split(string(activity('Get rule template').output.firstRow.rule_expression), '{}')[2])",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"value": "2",
										"activities": [
											{
												"name": "Rules with 2 params",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "rule_expr",
													"value": {
														"value": "@concat(split(string(activity('Get rule template').output.firstRow.rule_expression), '{}')[0], item().column_name, split(string(activity('Get rule template').output.firstRow.rule_expression), '{}')[1], split(string(item().extra_params), ',')[0], split(string(activity('Get rule template').output.firstRow.rule_expression), '{}')[2], split(string(item().extra_params), ',')[1], split(string(activity('Get rule template').output.firstRow.rule_expression), '{}')[3])",
														"type": "Expression"
													}
												}
											}
										]
									}
								],
								"defaultActivities": [
									{
										"name": "Rules no param",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "rule_expr",
											"value": {
												"value": "@concat(split(string(activity('Get rule template').output.firstRow.rule_expression), '{}')[0], item().column_name, split(string(activity('Get rule template').output.firstRow.rule_expression), '{}')[1])",
												"type": "Expression"
											}
										}
									}
								]
							}
						},
						{
							"name": "Append to rule list",
							"type": "AppendVariable",
							"dependsOn": [
								{
									"activity": "Compose rules",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "rule_list",
								"value": {
									"value": "@variables('rule_expr')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Append column names",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "col_names",
								"value": {
									"value": "@item().column_name",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Append rule names",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "rule_names",
								"value": {
									"value": "@item().applied_rule_name",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Get User Input",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('select *\nfrom dbo.data_quality_user_input\nwhere dataset_id =',string(pipeline().parameters.datasetID))",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			}
		],
		"parameters": {
			"datasetID": {
				"type": "int"
			},
			"startTime": {
				"type": "string",
				"defaultValue": "2/17/2023, 12:00:00 AM"
			},
			"endTime": {
				"type": "string",
				"defaultValue": "2/18/2023, 12:00:00 AM"
			}
		},
		"variables": {
			"rule_list": {
				"type": "Array"
			},
			"total_rules": {
				"type": "String"
			},
			"col_names": {
				"type": "Array"
			},
			"rule_names": {
				"type": "Array"
			},
			"file_name": {
				"type": "String"
			},
			"rule_expr": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2022-10-28T14:22:09Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}