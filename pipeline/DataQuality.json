{
	"name": "DataQuality",
	"properties": {
		"activities": [
			{
				"name": "Get Rules",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('select *\nfrom dbo.data_quality_rules\nwhere dataset_id =',string(pipeline().parameters.datasetID))",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Get Dataset Info",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Get Rules",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat(' select * from [dbo].[dataset_info] where dataset_id  = \n', activity('Get Rules').output.value[0].dataset_id)",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Get Dataset Info",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "dataset1",
						"type": "DatasetReference",
						"parameters": {
							"domain": {
								"value": "@activity('Get Dataset Info').output.firstRow.domain",
								"type": "Expression"
							},
							"dataset_path": {
								"value": "@activity('Get Dataset Info').output.firstRow.location",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Data flow",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set total_rules",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "dataflow1",
						"type": "DataFlowReference",
						"parameters": {
							"rule_list": {
								"value": "@variables('rule_list')",
								"type": "Expression"
							},
							"total_rules": {
								"value": "@int(variables('total_rules'))",
								"type": "Expression"
							},
							"rule_names": {
								"value": "@variables('rule_names')",
								"type": "Expression"
							},
							"col_names": {
								"value": "@variables('col_names')",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"source": {
								"domain": {
									"value": "@activity('Get Dataset Info').output.firstRow.domain",
									"type": "Expression"
								},
								"dataset_path": {
									"value": "@activity('Get Dataset Info').output.firstRow.location",
									"type": "Expression"
								}
							},
							"FailedRecords": {
								"domain": "@activity('Get Dataset Info').output.firstRow.domain",
								"dataset_path": "@activity('Get Dataset Info').output.firstRow.location"
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Rules",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Rules').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Append rule expr",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "rule_list",
								"value": {
									"value": "@item().rule_expression",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Append col_names",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "col_names",
								"value": {
									"value": "@item().column_name",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Append rule_names",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "rule_names",
								"value": {
									"value": "@item().rule_name",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Set total_rules",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "total_rules",
					"value": {
						"value": "@string(length(variables('rule_list')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach2",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Applied Rules",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Applied Rules').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Lookup1",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": "@concat(' select rule_expression from dbo.data_quality_rules_new where rule_id = ', @activity('Get Applied Rules').output.value[0][rule_id])",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSqlTable1",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						}
					]
				}
			},
			{
				"name": "Get Applied Rules",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "@concat('select rule_id,column_name\nfrom dbo.data_quality_applied_rules\nwhere dataset_id =',string(pipeline().parameters.datasetID))",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			}
		],
		"parameters": {
			"datasetID": {
				"type": "int"
			},
			"startDate": {
				"type": "string"
			},
			"endDate": {
				"type": "string"
			}
		},
		"variables": {
			"rule_list": {
				"type": "Array"
			},
			"total_rules": {
				"type": "String"
			},
			"col_names": {
				"type": "Array"
			},
			"rule_names": {
				"type": "Array"
			}
		},
		"annotations": [],
		"lastPublishTime": "2022-10-28T14:22:09Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}